
# Start Project 

	Create a project from scratch, or 
	start a project by importing existing content from a variety of sources. 
	See Starting Projects.

# Add Elements 
	
	Add content and elements to your project, such as topics, text, a table of contents, cross-references, navigation, page layouts, and all of the other things necessary to help your end users. 
	
	Adding Elements and Objects.

		The project needs topics, content, cross-references, navigation, and all of the other elements necessary to help your end users.

			online elements
			print-based elements
			ambi-format element

				Equations 
				Footnotes 
				Glossaries 
				Images 
				Indexes 
				Master Pages 
				Multimedia 
				Navigation and Links 
				Page Layouts 
				QR Codes 
				Responsive Content 
				Slideshows 
				Snippets 
				Tables 
				Text Boxes 

				Topics !!!
					a body of info on a subject

					for topic-based authoring,
					separate info into separate files

						Each topic is a separate XHTML file with an .htm extension. 
						This enables you to take advantage of topic-based authoring. 
						In other words, rather than creating a few very long documents, 
						you create many small documents 
						and then piece those separate files together to produce various outputs.

					In your Flare project folder 
					(you specified the location for the folder on your computer when you created the project), 
					the topic files are stored in a subfolder called "Content." 

					topic length

						For online output, 

							topics are like pages on a well-designed website. 
							They should not be too long, but should be long enough to provide useful information. 
							There is no specific rule for determining how long to make your topics. 
							It is mostly a matter of common sense. 
							When you are developing a topic, ask yourself if it is something that you would find useful and easy to read.

							If you have a topic that seems to be getting a little long, you can break the topic into smaller topics and provide hyperlinks from one topic to another. Another solution is to use Flare's DHTML features (drop-down text and expanding text) to collapse areas of text until end users click a hotspot to open the hidden text. You are currently reading content contained in a drop-down hotspot.

						When it comes to creating print-based output from Flare, 
						
							these small topics can be strung together in the output to form larger chapters. 
							It is recommended that you try to use small topics when working in Flare—
							usually no more than a few pages in output. 
							Although you can certainly create a very long topic that holds all of the content for an entire chapter or manual, 
							smaller topics allow you to take full advantage of Flare's many powerful single-sourcing features. 
							For example, with small topics, you can reuse them when generating many different outputs, all from the same project. 
							You might want to use some topics in some outputs, but not in others. 
							With large documents, that is very difficult, if not impossible to do. 
							In addition, small topics are much easier to send out to others for review.



					After you create a topic, 
					you can add to it almost anything you want
					—text, tables, formatting styles, cross-references, images, multimedia, etc. 
					It all depends on the needs of your audience. 
					A topic can contain simple text, or it can contain a combination of many elements. 
					A topic does not even need to contain much text at all; for example, you could simply use a topic to hold a Flash-based movie or a few lines of text for the title page in print-based output. 
					You are only limited by what you can do with XML.

					If you are not familiar with XML, that's okay. 
					You can use the easy XML Editor interface to edit topics in Flare, working much like you would in a program such as Microsoft Word. 
					Flare creates the XML tags behind the scenes for you.


					Ways to create/code topics

						Although Flare provides you with a user interface to work on topics (i.e., the XML Editor), 
						you can get behind the scenes to see and edit the code for the topic. 
						The easiest way to do this is to open the topic in the Internal Text Editor in Flare. 
						To do this, open the topic as usual, then at the bottom of the XML Editor, click the Text Editor tab. 
						You can also use split the editor between the XML Editor and the Internal Text Editor. See Internal Text Editor.

						You can also open topics in other third-party tools. 
						One way to do this is to open the topic in Flare. 
						Then click the Send To button in the Standard toolbar and select another editor.

						Note: 
						Although it is possible to open any Flare files in a third-party editor, it is recommended that you avoid editing these files in certain programs while Flare is running. 
						For example, opening a stylesheet in Notepad is not an issue. 
						But you might experience problems if you open a topic or snippet in Microsoft Word and edit it while Flare is running.



					    Standard Method
					    Importing 
					    	import individual XHTML files 



						    Do one of the following, depending on the part of the user interface you are using:

						        (Recommended) Right-Click 
						        	In the Content Explorer, 
						        	right-click on a folder and from the context menu select Add Topic.

						        	Tip: 
						        	When adding a new file to the Content Explorer, the recommended method is to right-click on the folder in the Content Explorer and use the New menu option. This is the most efficient way to direct the new file to the folder where you want to store it. That's because the Add File dialog opens when you add a new content file, and this method ensures that the folder you want is already selected in that dialog.

						        Ribbon Select the Project ribbon. In the Content section select New > Topic.
						        Local Toolbar In the local toolbar of the Content Explorer click .
						        Keyboard Shortcut Press CTRL+T.

						    The Add File dialog opens.
						    Select New from existing and click .
						    In the Open dialog, navigate to the XHTML file that you want to import. Then select it and click Open. The Source File field now contains the path to the file that you are importing. Also, the name of the file is displayed in the File Name field.
						    (Optional) The Folder field is automatically populated with the folder that has focus in the Content Explorer. If you want to place the file into a folder that you previously created in the Content Explorer, in the Folder field click and select the subfolder. Otherwise, keep the default location. See Creating Subfolders.
						    (Optional) If you want to give the topic a different name than that for the imported file, click in the File name field and enter the text.
						    (Optional) If you want the heading for the topic to use the same text that you provide for the file name, leave the 1st Heading field blank. Otherwise, enter the text that you want to use for the heading in the topic.
						    (Optional) If you want the heading for the topic to use the default h1 style, leave the Style field blank. Otherwise, select a style to apply to the heading in the topic.
						    (Optional) In the Stylesheet field, select a stylesheet to apply to the new topic. If you do not have a stylesheet in your project, this field remains blank.
						    (Optional) If you want to apply condition tags to the file, expand the Attributes section at the bottom of the dialog. Next to the Condition Tags field, click and select the conditions you want to apply. Click OK. See Applying Conditions to Content.
						    (Optional) If you want to apply file tags to the file, expand the Attributes section at the bottom of the dialog. Next to the File Tags field, click and select the file tags you want to apply. Click OK. See Associating Tags with Files.
						    Click Add. The topic is added and opens in the XML Editor.

						    Now simply click inside the topic page in the XML Editor and start typing text or adding any other elements (e.g., tables, images, cross-references, multimedia) appropriate for the topic.

						    It is also likely that you will want to apply formatting styles to the topic at this point (see Making It Look Good).



					    From Table of Contents
					    Importing From Word
					    Importing From FrameMaker 
					    Importing From HTML 
					    Importing From DITA



					Individual topic files are stored in the Content Explorer, either at the root level or in custom folders that you create.


					special topics

						In addition to the regular topics that make up your chapter content, 
						you can create special topics with a proxy (placeholder) for displaying generated content. 
						These special topics are especially useful for print-based output and are often used for your manual's front matter and back matter. 
						The most common type of generated content is a table of contents. 
						Other kinds of output for which you can create topics include indexes, glossaries, endnotes, lists of elements, and lists of concepts.


				Variables  


# Make It Look Good 
	Through the use of elements such as stylesheets, skins, and master pages, 
	you can develop a look and feel for your output. 
	See Making It Look Good.

# Develop Targets 
	
	Decide the type(s) of output formats that you want to generate and design targets accordingly to meet your needs. 
	See Developing Targets.

# Build and Distribute Output 

	Generate output from a target, then make the files accessible to your end users. 

	See Building and Publishing Output.

=========================

Project > Build Primary > 

==============

Project > Import > MS Word document > green cross click > select documents > Next > 